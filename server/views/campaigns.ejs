<%- include('includes/head.ejs') %>

<div class="jumbotron">
    <div class="container-md" id="app">
      <% if(error) { %> <%- include('includes/err.ejs') %> <% } %>

        <div class="row" style="align-items: flex-end">
          <div class="col">
            <label for="username">Username</label>
            <input
              type="text"
              id="username"
              v-model="uname"
              name="uname"
              class="form-control"
              required
            />
          </div>

          <div class="col">
            <label for="sort">Sort</label>
            <select name="sort" id="sort" class="form-control" v-model="sort">
              <option value="1">Recent</option>
              <option value="2">Pending</option>
              <option value="3">Rejected</option>
            </select>
          </div>

          <div class="col">
            <input
              type="submit"
              name="search"
              id="search"
              value="Search"
              @click="fetchCampaigns()"
              class="btn btn-primary btn-block"
            />
          </div>
        </div>

      <!-- Campaigns List -->
      <div class="d-block mt-5" id="site-list">

        <div class="row justify-content-between" style="align-items: flex-end">
            <div class="col-md-3 font-weight-bold" style="align-self:flex-start">
                {{total}} Total
            </div>
            <div class="col-md-3 d-flex justify-content-end">
                <select class="form-control" id="cpage" v-model="page">
                    <option v-for="p in pages">{{p}}</option>
                </select>
                <button class="btn btn-primary" @click="fetchCampaigns()">Go</buttom>
            </div>
        </div>

        <div class="site-list-container mt-5">
            <div class="table-responsive">
                <table class="table table-bordered">
                  <thead>
                      <th>Campaign</th>
                      <th>Type</th>
                      <th>Status</th>
                      <th>Banners</th>
                      <th>CPC</th>
                      <th>Budget</th>
                      <th>Daily Budget</th>
                      <th>Views</th>
                      <th>Clicks</th>
                      <th>Pops</th>
                      <th>Spent</th>
                      <th>Manage</th>
                  </thead>
                  <tbody v-if="result !== null && !loading">
                      <tr v-for="(res, index) in result" :key="index">
                        <td>
                            <a :href="res.url">{{res.title || res.campaign_title}}</a>
                            <div class="text-secondary">{{res.desc}}</div>
                        </td>
                        <td>
                            <span class="badge" :class="{ 'badge-danger': res.adult == 'Adult', 'badge-success':res.adult == 'Non-Adult' }">{{res.adult}}</span><br>
                            <span class="badge badge-primary">{{res.campaign_type}}</span><br>
                            <span class="badge"
                              style="cursor: pointer;"
                              :class="{ 'badge-danger': res.pro == 1, 'badge-success': res.pro == 0 }"
                              @click="togglePro(res._id)"
                            >{{res.pro ? 'Pro':'Non-Pro'}}</span>
                        </td>
                        <td>
                            <span class="badge" :class="{
                                'badge-danger': res.status == 'Rejected' || res.status == 'Deleted',
                                'badge-success': res.status == 'Approved',
                                'badge-warning': res.status == 'Pending' }">{{res.status}}</span><br>
                            <span class="badge" :class="{
                                'badge-success': res.run == 1,
                                'badge-warning': res.run == 2 || res.run == 3 }">{{res.run == 1 ? 'Running':res.run == 2 ? 'User Pause':'Machine Pause'}}</span>
                        </td>
                        <td class="text-primary" style="cursor: pointer;" @click="getBanners(res._id)" data-toggle="modal" data-target="#bannersModal">Show</td>
                        <td>${{res.cpc}}</td>
                        <td><span>${{res.budget}}</span><br><span class="text-secondary">${{res.budget_rem}}</span></td>
                        <td><span>${{res.today_budget}}</span><br><span class="text-secondary">${{res.today_budget_rem}}</span></td>
                        <td>{{res.views}}</td>
                        <td>{{res.clicks}}</td>
                        <td>{{res.pops}}</td>
                        <td>${{res.spent}}</td>
                        <td>
                            <span role="button" class="text-success" @click="changeStatus(res._id, 1)">Approve</span><br>
                            <span role="button" class="text-warning" @click="changeStatus(res._id, 2)">Pending</span><br>
                            <span role="button" class="text-danger" @click="changeStatus(res._id, 3)">Reject</span>
                        </td>
                      </tr>
                  </tbody>
                </table>
              </div>
        </div>

      </div>

      <div class="modal fade" id="bannersModal">
        <div class="modal-dialog modal-xl">
          <div class="modal-content">

            <div class="modal-header">
              <h4 class="modal-title">Banners</h4>
              <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">
              <div v-for="banner in banners" v-if="banners.length > 0">
                  <img :src="banner" style="max-width: 500px;max-height: 500px;" />
              </div>
              <div v-else>No Banners Found!</div>
            </div>

            <div class="modal-footer">
              <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>

          </div>
        </div>
      </div>

    </div>
  </div>

  <script src="https://unpkg.com/vue@3.2.20/dist/vue.global.prod.js"></script>
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

  <script>

      const campaignsApp = {
          data() {
              return {
                uname: null,
                sort: 1,
                page: 1,
                pages: 0,
                result: [],
                total: null,
                loading: false,
                banners: []
              }
          },
          mounted() {
            this.fetchCampaigns();
          },
          methods: {
            async fetchCampaigns() {
                try {
                    const postData = {
                        user: this.uname,
                        sort: this.sort,
                        page: this.page
                    }
                    this.loading = true;
                    const res = await axios.post('/admin/campaigns', postData);
                    this.loading = false;
                    this.result = res.data.result;
                    this.total = res.data.total;
                    // pages
                    this.pages = Math.ceil(this.total / 50);
                } catch (err) {
                    this.loading = false;
                    alert(err);
                    console.log(err);
                }
            },
            async changeStatus(id, status) {
                try {
                    const postData = {
                        id: id,
                        status: status
                    }
                    const res = await axios.post('/admin/campaigns/set-status', postData);
                    alert('Success');
                    this.fetchCampaigns();
                } catch (err) {
                    alert(err);
                    console.log(err);
                }
            },
            async getBanners(id) {
                try {
                    this.banners = [];
                    const res = await axios.get(`/admin/campaigns/banners?id=${id}`);
                    this.banners = res.data;
                } catch (err) {
                    alert(err);
                    console.log(err);
                }
            },
            async togglePro(id) {
              const cValue = confirm('Are you sure?');
              if(!cValue) return;
              try {
                    const res = await axios.get(`/admin/campaigns/toggle-pro?id=${id}`);
                    alert('Success');
                    this.fetchCampaigns();
                } catch (err) {
                    alert(err);
                    console.log(err);
                }
            }
          }
      }

      Vue.createApp(campaignsApp).mount("#app");

  </script>

<%- include('includes/end.ejs') %>
