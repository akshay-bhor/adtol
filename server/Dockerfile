FROM node:alpine

WORKDIR "/server"

COPY ./package.json/ ./

COPY ./package-lock.json/ ./

RUN npm install

COPY . .

# set app config option
ENV NODE_ENV=development
ENV PORT=4000
ENV ORIGIN=dev.eviltech.net

# set argument vars in docker-run command
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_DEFAULT_REGION

# app secre vars
ARG HASH_SECRET
ARG PAY_KEY_ID
ARG PAY_KEY_SECRET
ARG EMAIL_USER
ARG EMAIL_PASS
ARG AES_KEY
ARG RECAPTCHA_SECRET
ARG GOOGLE_CLIENT_ID
ARG GOOGLE_CLIENT_SECRET

# AWS RDS vars
ARG DB_NAME
ARG DB_USER
ARG DB_PASS
ARG DB_HOST
ARG DB_DIALECT
ARG DB_PORT

ENV AWS_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID
ENV AWS_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY
ENV AWS_DEFAULT_REGION $AWS_DEFAULT_REGION
ENV DB_NAME $DB_NAME
ENV DB_USER $DB_USER
ENV DB_PASS $DB_PASS
ENV DB_HOST $DB_HOST
ENV DB_DIALECT $DB_DIALECT
ENV DB_PORT $DB_PORT
ENV HASH_SECRET $HASH_SECRET
ENV PAY_KEY_ID $PAY_KEY_ID
ENV PAY_KEY_SECRET $PAY_KEY_SECRET
ENV EMAIL_USER $EMAIL_USER
ENV EMAIL_PASS $EMAIL_PASS
ENV AES_KEY $AES_KEY
ENV RECAPTCHA_SECRET $RECAPTCHA_SECRET
ENV GOOGLE_CLIENT_ID $GOOGLE_CLIENT_ID
ENV GOOGLE_CLIENT_SECRET $GOOGLE_CLIENT_SECRET

EXPOSE 4000

CMD ["npm", "start"]